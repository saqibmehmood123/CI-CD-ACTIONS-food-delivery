name: Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-west-3
  ECR_REPOSITORY: food-delivery/order-service
  EKS_CLUSTER: food-delivery-prod  # Updated cluster name
  DEPLOYMENT_NAME: order-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update the deployment with new image
        kubectl set image deployment/$DEPLOYMENT_NAME \
          order-service=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n default
        # Wait for rollout to complete
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n default
        # Verify deployment
        kubectl get deployments -n default
        kubectl get pods -n default -l app=order-service
